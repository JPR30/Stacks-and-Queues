import java.util.Scanner;
import java.util.Stack;
import java.util.LinkedList;
import java.util.Queue;

public class StacksAndQueues {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Choose data structure: (1)Stacks (2)Queus: ");
        String choice = scanner.next().toLowerCase();
        
        System.out.print("Enter array size (n): ");
        int n = scanner.nextInt();
        
        if (choice.equals("1")) {
            Stack<Integer> stack = new Stack<>();
            while (true) {
                System.out.print("Choose an option (Push or Pop?): ");
                String operation = scanner.next().toLowerCase();
                
                if (operation.equals("push")) {
                    if (stack.size() < n) {
                        System.out.print("Enter integer value: ");
                        int value = scanner.nextInt();
                        stack.push(value);
                    } else {
                        System.out.println("Stack is full!");
                    }
                } else if (operation.equals("pop")) {
                    if (!stack.isEmpty()) {
                        System.out.println("Popped element: " + stack.pop());
                    } else {
                        System.out.println("Stack is empty!");
                    }
                } else {
                    System.out.println("Invalid operation.");
                }
                
                System.out.print("Continue or End? (continue/end): ");
                if (scanner.next().equalsIgnoreCase("end")) {
                    System.out.println("Final Stack: " + stack);
                    break;
                }
            }
        } else if (choice.equals("2")) {
            Queue<Integer> queue = new LinkedList<>();
            while (true) {
                System.out.print("Enqueue or Dequeue? (enqueue/dequeue): ");
                String operation = scanner.next().toLowerCase();
                
                if (operation.equals("enqueue")) {
                    if (queue.size() < n) {
                        System.out.print("Enter integer value: ");
                        int value = scanner.nextInt();
                        queue.offer(value);
                    } else {
                        System.out.println("Queue is full!");
                    }
                } else if (operation.equals("dequeue")) {
                    if (!queue.isEmpty()) {
                        System.out.println("Dequeued element: " + queue.poll());
                    } else {
                        System.out.println("Queue is empty!");
                    }
                } else {
                    System.out.println("Invalid operation.");
                }
                
                System.out.print("Continue or End? (continue/end): ");
                if (scanner.next().equalsIgnoreCase("end")) {
                    System.out.println("Final Queue: " + queue);
                    break;
                }
            }
        } else {
            System.out.println("Invalid choice.");
        }
        
        scanner.close();
    }
}

